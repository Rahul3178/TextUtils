{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","rows","value","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","arr","split","i","length","charAt","slice","str2","join","copyText","document","getElementById","select","navigator","clipboard","writeText","Alert","alert","role","word","lower","capitalize","msg","prototype","PropTypes","string","isRequired","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.61534a3e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/About\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          \r\n           <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype={\r\n    title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string\r\n}\r\nNavbar.defaultProps={\r\n    title:\"Set title here\",\r\n    aboutText:\"About\"\r\n}","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n\r\n  const [text,setText] = useState('Enter Text here....');\r\n\r\n\r\n    const handleUpClick =()=>{\r\n       \r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper Case\",\"primary\")\r\n    }\r\n\r\n\r\n    const handleLwClick =()=>{\r\n       \r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lower Case\",\"secondary\")\r\n    \r\n    }\r\n\r\n\r\n    const clear =()=>\r\n    {\r\n        setText(' ');\r\n        props.showAlert(\"Empty\",\"danger\")\r\n    \r\n    }\r\n\r\n       const handleCopy = () => {\r\n      var copyText = document.getElementById(\"myBox\");\r\n      copyText.select();\r\n       navigator.clipboard.writeText(copyText.value);\r\n       props.showAlert(\"Text is Copied to Clipboard\",\"info\")\r\n    \r\n       \r\n     \r\n    }; \r\n\r\n    const handleonChange =(event)=>{\r\n        \r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    const wordCapital=()=>{\r\n        const str=text;\r\n        const arr=str.split(\" \");\r\n        for(var i=0;i<arr.length;i++)\r\n        {\r\n            arr[i]=arr[i].toLowerCase();\r\n            arr[i]=arr[i].charAt(0).toUpperCase()+arr[i].slice(1);\r\n        }\r\n        const str2=arr.join(\" \");\r\n        setText(str2);\r\n        props.showAlert(\"Text Capitalized\",\"success\")\r\n    \r\n    }\r\n\r\n    \r\n\r\n\r\n  return (\r\n      <>\r\n    <div className='container'style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <div className=\"container mb-3\">\r\n      <h3>{props.heading}</h3>\r\n        <textarea\r\n          className=\"form-control\" id=\"myBox\"\r\n          style={{backgroundColor:props.mode==='dark'?'grey':'white'}}\r\n          rows=\"8\" value={text} onChange={handleonChange}>\r\n        </textarea>\r\n      </div>\r\n      <button className=\"btn btn-success\" onClick={handleUpClick}>Convert to Uppercase </button>\r\n      <button className=\"btn btn-info mx-3\" onClick={handleLwClick}>Convert to Lowercase </button>\r\n      <button className=\"btn btn-primary mx-3\" onClick={wordCapital}>Capitalize Words </button>\r\n      <button className=\"btn btn-success mx-3\" onClick={handleCopy}>Copy </button>\r\n      <button className=\"btn btn-danger mx-3\" onClick={clear}>Clear </button>\r\n    \r\n        <div className=\"container my-5\">\r\n            <h3>Your Summary</h3>\r\n            <p > {text.split(\" \").length} Words and {text.length} Characters</p>\r\n            <p> {0.008*text.split(\" \").length}  Minutes to Read</p>\r\n            <h3>Preview</h3>\r\n            <p> {text.length>0?text:'Enter Some text into above box to preview here'} </p>\r\n        </div>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n        \r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n/* import About from \"./components/About\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"; */\n\nfunction App() {\n const [mode, setMode] = useState('light')\n\n\n const [alert,setAlert]=useState(null);\n const showAlert=(message,type)=>{\n   setAlert({\n      msg :message,\n      type :type\n   })\n   setTimeout(()=>{\n    setAlert(null);\n   },3000);\n }\n\n \n  const changeMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark mode is Enable\",\"danger\")\n      document.title=\"TextUtil Dark-Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"lights mode is Enable\",\"success\")\n      document.title=\"TextUtil Light-Mode\";\n    }\n  }\n  return (\n    <>\n     {/*  <Router> */}\n\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={changeMode}/>\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n          <Route exact path=\"/About\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n            \n          </Route>\n        </Switch> */}\n            <TextForm heading=\"Enter Text to analyze below\" mode={mode} showAlert={showAlert}/>\n        \n      </div>\n    { /* </Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <App/>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}